F<x>:=PolynomialRing(FiniteField(2));
FF<z>:=PolynomialRing(FiniteField(3));
H<t>:=PolynomialRing(Rationals());
ordlist:=[];
ordlistmod:=[];
curves:=[];
Z:=Integers();

sixI:=[z^4 + z^2 + 1];
sixH:=[z^4 + 2*z^2+1];
eightA:=[z^4 + z^3 + z^2 + 2*z + 1,z^4 + 2*z^3 + z^2 + z + 1];
tenA:=[z^4 + 2*z^3 + z + 1,z^4 + z^3 + 2*z + 1];
twelveC:=[z^4+z^3+2*z^2+2*z+1,z^4+2*z^3+2*z^2+z+1];
fourD:=[z^4+1];
eightA2ord:=[];
eightA2ss:=[];
sixes:=[x^2 + 1,
    x^2 + x + 1];
sixH21:=0;
sixH22:=0;

Q:=Rationals();
mm:=Matrix(Q,1,3,[0,0,0]);
c4d:=mm;
c12c:=mm;
c4c:=mm;
c2d:=mm;
c2c:=mm;
c6i:=mm;
c6h:=mm;
c8a:=mm;
c10a:=mm;

FFF:=FiniteField(256);
ordamb1:=[];
ordamb2:=[];
nonordamb:=[];
clag:=[];

twoorsix := function(CC);
CCC:=BaseChange(CC,FFF);
AA:=AbelianGroup(Jacobian(CCC));
AAA:=ElementaryAbelianQuotient(AA, 3);
vv:=0;
if Order(AAA) eq 81 then
	vv:=2;
	end if;
if Order(AAA) eq 9 then
	vv:=6;
	end if;
return vv;
end function;



power:=0;
all:=0;
ordinary:=0;
for a in [0..1] do
for b in [0..1] do
for c in [0..1] do
for d in [0..1] do
for e in [0..1] do
for f in [0..1] do
for g in [0..1] do
for h in [0..1] do
for i in [0..1] do
for j in [0..1] do
for k in [0..1] do
power:=power+1;
try
 C:=HyperellipticCurve(a*x^6 + b*x^5 + c*x^4 + d*x^3 + e*x^2 + f*x + g, h*x^3 + i*x^2 + j*x + k);
	catch z;
        continue;
end try;
if Genus(C) eq 2 then
	all:=all+1;
	A:=a*t^6 + b*t^5+c*t^4+d*t^3+e*t^2+f*t+g;
	B:=h*t^3+i*t^2 + j*t + k;
	D:=HyperellipticCurve(A,B);
	P:=H!EulerFactor(D,2); P3:=FF!EulerFactor(D,2); P2:=F!EulerFactor(D,2);
	b2:=Z!Coefficient(P,2);
	if GCD(b2,2) eq 1 then
		ord:=Q!1;
		ordinary:=ordinary+1;
		else
		ord:=Q!0;
		end if;
	if P3 in sixH then
		vv:=twoorsix(C);
		if ord eq 1 then
			if P2 eq sixes[1] then
				sixH21:=sixH21+1;
				end if;
			if P2 eq sixes[2] then
				sixH22:=sixH22+1;
				end if;
			end if;
		if ord eq 0 then
			clag:=Append(clag,P);
			end if;
		if vv eq 2 then
			c2c:=c2c+Matrix(Q,1,3,[1,ord,1-ord]);
			end if;	
		if vv eq 6 then
			c6h:=c6h + Matrix(Q,1,3,[1,ord,1-ord]);
			if ord eq 0 then
				nonordamb:=Append(nonordamb,4*(A + 4*t^6) + B^2);
				end if;
			if ord eq 1 then
				if P2 eq sixes[1] then
					ordamb1:=Append(ordamb1,4*(A + 4*t^6) + B^2);
					end if;
				if P2 eq sixes[2] then
					ordamb2:=Append(ordamb2,4*(A + 4*t^6) + B^2);
					end if;
				end if;
			end if;
		end if;
        if P3 in sixI then
		vv:=twoorsix(C);
                if vv eq 2 then
                        c2d:=c2d+ Matrix(Q,1,3,[1,ord,1-ord]);
                        end if; 
                if vv eq 6 then
                        c6i:=c6i + Matrix(Q,1,3,[1,ord,1-ord]);
			end if;
		end if;
       if P3 in eightA then
		c8a:=c8a+ Matrix(Q,1,3,[1,ord,1-ord]);
		if ord eq 1 then
			if P2 notin eightA2ord then
				eightA2ord:=Append(eightA2ord,P2);
				end if;
			end if;
              if ord eq 0 then
                        if P2 notin eightA2ss then
                                eightA2ss:=Append(eightA2ss,P2);
                                end if;
                        end if;
		end if;
       if P3 in tenA then
                c10a:=c10a+Matrix(Q,1,3,[1,ord,1-ord]);
                end if;
	if P3 in twelveC then
		 vv:=twoorsix(C);
                if vv eq 2 then
                        c4c:=c4c+ Matrix(Q,1,3,[1,ord,1-ord]);
                        end if;
                if vv eq 6 then
                        c12c:=c12c+Matrix(Q,1,3,[1,ord,1-ord]);
                        end if;
		end if;
	if P3 in fourD then
		c4d:=c4d+ Matrix(Q,1,3,[1,ord,1-ord]);
		end if;
	end if;
end for;
end for;
end for;
end for;
end for;
end for;
end for;
end for;
end for;
end for;
end for;
print("******* looping over y^2 + h(x) y = f(x) with deg(h,f) <= (3,6) over F2, #curves= ****");
power;
print("******* the number of curves with good reduction is *****");
all;
print("******* the number of curves with good ordinary reduction is *****");
ordinary;
print("******* the number with char poly = (x^4+2x^2+1) mod 3 and 6G/6H is ****");
c6h;
print("of the ordinary curves, the charpoly at 2 breakdown is");
sixes[1];
sixH21;
sixes[2];
sixH22;
print("******* the number with char poly = (x^4+2x^2+1) mod 3 and 2C is ****");
c2c; 
print("******* the number with char poly = (x^4+x^2+1) mod 3 and 6I is ****");
c6i;
print("******* the number with char poly = (x^4+x^2+1) mod 3 and 2D is ****");
c2d;
print("******* the number with char poly = (x^4+-x^3+x^2-+x+1) mod 3 and 8A is ****");
c8a;
print("and the mod-2 char polys in the ordinary case are all equal to");
eightA2ord;
print("******* the number with char poly = (x^4+-x^3-+x+1) mod 3 and 10A is ****");
c10a;
print("******* the number with char poly = (x^4+-x^3+2x^2-+x+1) mod 3 and 4C is ****");
c4c;
print("******* the number with char poly = (x^4+-x^3+2x^2-+x+1) mod 3 and 12C is ****");
c12c;
print("******* the number with char poly = (x^4+1) mod 3 and 4D is ****");
c4d;
print("******* the totals ********");
c2d + c2c + c4c + c4d + c6h + c6i + c8a + c10a + c12c;

print("****** ambigious 6G/6H non-ordinary curves ******");
print("ordinary with char poly at 2 is x^2(x^2+1)");
ordamb1;
print("ordinary with char poly at 2 is x^2(x^2+x+1)");
ordamb2;
print("non-ordinary");
nonordamb;
clag; 

