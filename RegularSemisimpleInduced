F<x>:=PolynomialRing(FiniteField(3));
G:=CSp(4,3);
ZG:=Subgroups(G);
S:=ZG[#ZG - 1]`subgroup;
C:=Classes(G);
P,phi:=quo<G|Center(G)>;
XG:=CharacterTable(G);

/* the element (-1,-1,-1,-1) */
c:=Center(G).1;


/* the function isregular determines if g is a regular element or not */

isregular := function(P)
Q:=Factorization(P);
count:=0;
for m in [1..#Q] do
	if Q[m][2] ge 2 then
		count:=1;
		end if;
	end for;
return 1-count;
end function;

print("list the conjugacy classes and orders of regular semisimple elements in Sp4(F3) up to conjugation in GSp_4(F3)");

regularsemisimple:=[];
for n in [1..#C] do
g:=C[n][3];
P:=F!CharacteristicPolynomial(g);
if g in S then
	if GCD(Order(g),3) eq 1 then
		if isregular(P) eq 1 then
			[n,Order(g)];
			regularsemisimple:=Append(regularsemisimple,g);	
			end if;
		end if;
	end if;
end for;

/* The following counts the number of elements in a group Gamma 
which are tidy. The only allowable possibility is that v(g) = -1. 
If 1 is an eigenvalue then so is -1, and g is not tidy. If -1
eigenvalue then so is 1, so need only rule out 1 from {1,-1}. Suppose 
the eigenvalues are of the form (a,-1/a,b,-1/b). Suppose that a ratio = - 1. 
The ratio of a/(-1/a) = -a^2 can't be -1 unless a=+-1. 
Hence we must have WLOG b = -a, and eigenvalues = (a,-1/a,-a,1/a), 
and the characteristic polynomial of g = char poly g*c for c = (-1,-1,-1,-1) */


function tidycount(Gamma);
counter:=0;
G:=Gamma meet S;
for g in Gamma do
	if g notin G then
		P:=F!CharacteristicPolynomial(g);
		Q:=F!CharacteristicPolynomial(g * c);
		if Evaluate(P,1) ne 0 then
			if P ne Q then
				counter:=counter+1;
			end if;
		end if;
	end if;
end for;
if counter ge 1 then
	counter:=1;
	end if;
return counter;
end function;

/* ARS is the list of regular semisimple elements in Sp_4(F_3)  */

ARS:=[];
for m in [1..3] do
	T:=Conjugates(G,regularsemisimple[m]);
	for n in [1..#T] do
		ARS:=Append(ARS,T[n]);
		end for;
	end for;

/* the list ARS should be the union of three conjugacy classes so their orders
and thus the next two numbers should coincide */

C[12][2] + C[24][2] + C[28][2];
#ARS;

/* reproduce Whitmore's table but now with regular-semisimple elements and ignoring
H^1(Gamma,F_3) */

good:=0;

print("reproducing Whitmore's table plus more, 1 means is good");
print("[Gamma', Gamma, reasonable, tidy, regular semisimple]");

for n in [3..#ZG] do
P:=ZG[n]`subgroup;
M:=GModule(P);
N:=GModule(P meet S);
if IsAbsolutelyIrreducible(N) then
sp:=SymmetricSquare(N);
CM:=CohomologyModule(P meet S,sp);
if Index(P,P meet S) eq 2 then
	count:=0;
	for g in P do
		if count eq 0 then
			if g in ARS then
				count:=count+1;
				end if;
			end if;
		end for;
/*  [n,Order(P),Order(P meet S),Dimension(CohomologyGroup(CM,1)),tidycount(P),count]; */
	[Order(P),Order(P meet S),1-Dimension(CohomologyGroup(CM,1)),tidycount(P),count];
	if ((1-Dimension(CohomologyGroup(CM,1)))*tidycount(P)*count) eq 1 then
		good:=good+1;
		end if;
if Order(P) le 2000 then
IdentifyGroup(P);
	end if;
if Order(P meet S) le 1000 then
IdentifyGroup(P meet S);
end if;
	end if;
	end if;
end for;

print("***the number of groups satisfying all properties is***");
good;
	





